var __bind=function(fn,me){return function(){return fn.apply(me,arguments)}},__hasProp={}.hasOwnProperty,__extends=function(child,parent){for(var key in parent){if(__hasProp.call(parent,key))child[key]=parent[key]}function ctor(){this.constructor=child}ctor.prototype=parent.prototype;child.prototype=new ctor;child.__super__=parent.prototype;return child};Hoodie.AdminConfig=function(){function AdminConfig(hoodie,admin){this.hoodie=hoodie;this.admin=admin}AdminConfig.prototype.get=function(){};AdminConfig.prototype.set=function(){};return AdminConfig}();Hoodie.AdminLogs=function(){function AdminLogs(hoodie,admin){this.hoodie=hoodie;this.admin=admin}AdminLogs.prototype.findAll=function(){return this.hoodie.resolveWith([])};return AdminLogs}();Hoodie.AdminModules=function(_super){__extends(AdminModules,_super);AdminModules.prototype.name="modules";function AdminModules(hoodie,admin){this.hoodie=hoodie;this.admin=admin;this.findAll=__bind(this.findAll,this);this.find=__bind(this.find,this);AdminModules.__super__.constructor.apply(this,arguments)}AdminModules.prototype.find=function(moduleName){if(moduleName==="module"){debugger}return AdminModules.__super__.find.call(this,"module",moduleName)};AdminModules.prototype.findAll=function(){return AdminModules.__super__.findAll.call(this,"module")};AdminModules.prototype.getConfig=function(moduleName){return this.hoodie.resolveWith({email:{transport:{host:"",port:465,auth:{user:"@gmail.com",pass:""},secureConnection:true,service:"Gmail"}}})};AdminModules.prototype.setConfig=function(moduleName,config){if(config==null){config={}}return this.hoodie.resolveWith(config)};return AdminModules}(Hoodie.Remote);Hoodie.AdminUsers=function(_super){__extends(AdminUsers,_super);AdminUsers.prototype.name="_users";function AdminUsers(hoodie,admin){this._mapDocsFromFindAll=__bind(this._mapDocsFromFindAll,this);this.hoodie=hoodie;this.admin=admin;AdminUsers.__super__.constructor.apply(this,arguments)}AdminUsers.prototype.addTestUser=function(email){var baseUrl,hash,testHoodieUser;baseUrl=hoodie.baseUrl;hash="test-"+hoodie.uuid(5);testHoodieUser=new Hoodie(baseUrl.replace(/\bapi\./,""+hash+".api."));testHoodieUser.account.ownerHash=hash;if(!email){email=""+testHoodieUser.account.ownerHash+"@example.com"}return testHoodieUser.account.signUp(email,"secret")};AdminUsers.prototype.addTestUsers=function(nr){var i,promises,timestamp;if(nr==null){nr=1}timestamp=(new Date).getTime();promises=function(){var _i,_results;_results=[];for(i=_i=1;1<=nr?_i<=nr:_i>=nr;i=1<=nr?++_i:--_i){_results.push(this.addTestUser())}return _results}.call(this);return $.when.apply($,promises)};AdminUsers.prototype.removeAllTestUsers=function(){return this.hoodie.rejectWith({error:"not yet implemented"})};AdminUsers.prototype.getTotal=function(){return this.findAll().pipe(function(users){return users.length})};AdminUsers.prototype.search=function(query){var path;path="/_all_docs?include_docs=true";path=""+path+'&startkey="org.couchdb.user:user/'+query+'"&endkey="org.couchdb.user:user/'+query+'|"';return this.request("GET",path).pipe(this._mapDocsFromFindAll).pipe(this.parseAllFromRemote)};AdminUsers.prototype._mapDocsFromFindAll=function(response){var rows;rows=response.rows.filter(function(row){return/^org\.couchdb\.user:/.test(row.id)});return rows.map(function(row){return row.doc})};return AdminUsers}(Hoodie.Remote);Hoodie.Admin=function(){function Admin(hoodie){this.hoodie=hoodie;this.users=new Hoodie.AdminUsers(this.hoodie,this);this.config=new Hoodie.AdminConfig(this.hoodie,this);this.logs=new Hoodie.AdminLogs(this.hoodie,this);this.modules=new Hoodie.AdminModules(this.hoodie,this);this.hoodie.account._userKey=function(){return"admin"};this.hoodie.remote.pull=function(){};this.hoodie.remote.push=function(){};this.hoodie.remote.sync=function(){};this.hoodie.account._handleSignInSuccess=function(response){var defer,username;defer=hoodie.defer();username="admin";hoodie.account._authenticated=true;hoodie.account._setUsername(username);hoodie.account.trigger("signin",username);return defer.resolve(username,username)};this.patchHoodie()}Admin.prototype.patchHoodie=function(event,callback){return Hoodie.LocalStore.prototype.isPersistent=function(){return false}};Admin.prototype.on=function(event,callback){};Admin.prototype.authenticate=function(password){if(this.hoodie.account.username!=="admin"){return this.hoodie.rejectWith("Not signed in as admin.")}return this.hoodie.account.authenticate()};Admin.prototype.signIn=function(password){var username;username="admin";return this.hoodie.account.signIn(username,password)};Admin.prototype.signOut=function(){return this.hoodie.account.signOut()};Admin.prototype.getAppInfo=function(){var defer,info;defer=this.hoodie.defer();info={name:"minutes.io"};window.setTimeout(function(){return defer.resolve(info)});return defer.promise()};Admin.prototype.getStats=function(since){var defer,key,stats;defer=this.hoodie.defer();stats={signups:12,account_deletions:3,users_active:1302,users_total:4211,growth:.04,active:-.02,since:since};if(!since){for(key in stats){stats[key]=stats[key]*17}}window.setTimeout(function(){return defer.resolve(stats)});return defer.promise()};Admin.prototype.getConfig=function(){return this.modules.find("appconfig").pipe(function(module){return module.config})};Admin.prototype.setConfig=function(config){var promise,updateFunction;if(config==null){config={}}updateFunction=function(module){module.config=config;return module};promise=this.modules.update("module","appconfig",updateFunction);return promise};return Admin}();